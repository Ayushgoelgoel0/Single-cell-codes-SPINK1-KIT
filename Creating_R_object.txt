#########Dimplot and feature plot
#Packages
{library(Seurat)
  library(dplyr)
  library(Matrix)
  library(ggplot2)
  library(cowplot)
  library(EnsDb.Mmusculus.v79)
  library(Signac)
  library(hdf5r)
  library(data.table)
  library(magrittr)
}
#Read files and create Seurat object
  #WT 
  inputdata.10x.WT.1 <- Read10X_h5("filtered_feature_bc_matrix_WT_1.h5")
  inputdata.10x.WT.2 <- Read10X_h5("filtered_feature_bc_matrix_WT_2.h5")
  rna_counts.WT.1 <- inputdata.10x.WT.1$`Gene Expression`
  rna_counts.WT.2 <- inputdata.10x.WT.2$`Gene Expression`
  rna.WT.1 <- CreateSeuratObject(counts = rna_counts.WT.1,project = "rna.WT.1")
  rna.WT.2 <- CreateSeuratObject(counts = rna_counts.WT.2,project = "rna.WT.2")
  
  #2W 
  inputdata.10x.2W.1 <- Read10X_h5("filtered_feature_bc_matrix_2W_1.h5")
  inputdata.10x.2W.2 <- Read10X_h5("filtered_feature_bc_matrix_2W_2.h5")
  rna_counts.2W.1 <- inputdata.10x.2W.1$`Gene Expression`
  rna_counts.2W.2 <- inputdata.10x.2W.2$`Gene Expression`
  rna.2W.1 <- CreateSeuratObject(counts = rna_counts.2W.1,project = "rna.2W.1")
  rna.2W.2 <- CreateSeuratObject(counts = rna_counts.2W.2,project = "rna.2W.2")
  
  #1M
  inputdata.10x.1M.1 <- Read10X_h5("filtered_feature_bc_matrix_1M_1.h5")
  inputdata.10x.1M.2 <- Read10X_h5("filtered_feature_bc_matrix_1M_2.h5")
  rna_counts.1M.1 <- inputdata.10x.1M.1$`Gene Expression`
  rna_counts.1M.2 <- inputdata.10x.1M.2$`Gene Expression`
  rna.1M.1 <- CreateSeuratObject(counts = rna_counts.1M.1,project = "rna.1M.1")
  rna.1M.2 <- CreateSeuratObject(counts = rna_counts.1M.2,project = "rna.1M.2")
  
  #2.5M 
  inputdata.10x.2.5M.1 <- Read10X_h5("filtered_feature_bc_matrix_2_5M_1.h5")
  inputdata.10x.2.5M.2 <- Read10X_h5("filtered_feature_bc_matrix_2_5M_2.h5")
  inputdata.10x.2.5M.3 <- Read10X_h5("filtered_feature_bc_matrix_2_5M_3.h5")
  inputdata.10x.2.5M.4 <- Read10X_h5("filtered_feature_bc_matrix_2_5M_4.h5")
  rna_counts.2.5M.1 <- inputdata.10x.2.5M.1$`Gene Expression`
  rna_counts.2.5M.2 <- inputdata.10x.2.5M.2$`Gene Expression`
  rna_counts.2.5M.3 <- inputdata.10x.2.5M.3$`Gene Expression`
  rna_counts.2.5M.4 <- inputdata.10x.2.5M.4$`Gene Expression`
  rna.2.5M.1 <- CreateSeuratObject(counts = rna_counts.2.5M.1,project = "rna.2.5M.1")
  rna.2.5M.2 <- CreateSeuratObject(counts = rna_counts.2.5M.2,project = "rna.2.5M.2")
  rna.2.5M.3 <- CreateSeuratObject(counts = rna_counts.2.5M.3,project = "rna.2.5M.3")
  rna.2.5M.4 <- CreateSeuratObject(counts = rna_counts.2.5M.4,project = "rna.2.5M.4")
  
  #3.5M 
  inputdata.10x.3.5M.1 <- Read10X_h5("filtered_feature_bc_matrix_3_5M_1.h5")
  inputdata.10x.3.5M.2 <- Read10X_h5("filtered_feature_bc_matrix_3_5M_2.h5")
  rna_counts.3.5M.1 <- inputdata.10x.3.5M.1$`Gene Expression`
  rna_counts.3.5M.2 <- inputdata.10x.3.5M.2$`Gene Expression`
  rna.3.5M.1 <- CreateSeuratObject(counts = rna_counts.3.5M.1,project = "rna.3.5M.1")
  rna.3.5M.2 <- CreateSeuratObject(counts = rna_counts.3.5M.2,project = "rna.3.5M.2")
  
  #4.5M 
  inputdata.10x.4.5M.1 <- Read10X_h5("filtered_feature_bc_matrix_4_5M_1.h5")
  inputdata.10x.4.5M.2 <- Read10X_h5("filtered_feature_bc_matrix_4_5M_1.h5")
  rna_counts.4.5M.1 <- inputdata.10x.4.5M.1$`Gene Expression`
  rna_counts.4.5M.2 <- inputdata.10x.4.5M.2$`Gene Expression`
  rna.4.5M.1 <- CreateSeuratObject(counts = rna_counts.4.5M.1,project = "rna.4.5M.1")
  rna.4.5M.2 <- CreateSeuratObject(counts = rna_counts.4.5M.2,project = "rna.4.5M.2")
  
  #RC
  inputdata.10x.RC.1 <- Read10X_h5("filtered_feature_bc_matrix_6M.h5")
  rna_counts.RC.1 <- inputdata.10x.RC.1$`Gene Expression`
  rna.RC <- CreateSeuratObject(counts = rna_counts.RC.1,project = "rna.RC")
  
 
#Merge Seurat objects
rna.All.combined <- merge(rna.WT.1, y = c(rna.WT.2,rna.2W.1,rna.2W.2,rna.1M.1,rna.1M.2,rna.2.5M.1,rna.2.5M.2,rna.2.5M.3,rna.2.5M.4,rna.3.5M.1,rna.3.5M.2,rna.4.5M.1,rna.4.5M.2,rna.RC), add.cell.ids = c("rna.WT.1", "rna.WT.2","rna.2W.1","rna.2W.2","rna.1M.1","rna.1M.2","rna.2.5M.1","rna.2.5M.2","rna.2.5M.3","rna.2.5M.4","rna.3.5M.1","rna.3.5M.2","rna.4.5M.1","rna.4.5M.2","rna.RC"), project = "rna.All.combined")

#Remove data to release storage
rm(inputdata.10x.WT.1,inputdata.10x.WT.2,inputdata.10x.2W.1,inputdata.10x.2W.2)
rm(inputdata.10x.1M.1,inputdata.10x.1M.2,inputdata.10x.2.5M.1,inputdata.10x.2.5M.2,inputdata.10x.2.5M.3,inputdata.10x.2.5M.4)
rm(inputdata.10x.3.5M.1,inputdata.10x.3.5M.2,inputdata.10x.4.5M.1,inputdata.10x.4.5M.2,inputdata.10x.RC.1)
rm(rna.WT.1,rna.WT.2,rna.2W.1,rna.2W.2,rna.1M.1,rna.1M.2,rna.2.5M.1,rna.2.5M.2,rna.2.5M.3,rna.2.5M.4,rna.3.5M.1,rna.3.5M.2,rna.4.5M.1,rna.4.5M.2,rna.RC)
rm(rna_counts.WT.1,rna_counts.WT.2,rna_counts.2W.1,rna_counts.2W.2,rna_counts.1M.1,rna_counts.1M.2,rna_counts.2.5M.1,rna_counts.2.5M.2)
rm(rna_counts.2.5M.3,rna_counts.2.5M.4,rna_counts.3.5M.1,rna_counts.3.5M.2,rna_counts.4.5M.1,rna_counts.4.5M.2,rna_counts.RC.1)
gc()

##mt gene marking
table(rna.All.combined@meta.data$orig.ident)
rna.All.combined[["percent.mt"]] <- PercentageFeatureSet(rna.All.combined, pattern = "^mt-")

### QC
VlnPlot(rna.All.combined, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3)
{plot1 <- FeatureScatter(rna.All.combined, feature1 = "nCount_RNA", feature2 = "percent.mt")
  plot2 <- FeatureScatter(rna.All.combined, feature1 = "nCount_RNA", feature2 = "nFeature_RNA")
  plot1 + plot2}
###
rna.All.combined.list <- SplitObject(rna.All.combined, split.by = "orig.ident")
rna.All.combined.list <- lapply(X = rna.All.combined.list, FUN = function(x) {
  x <- NormalizeData(x, verbose = FALSE)
  x <- FindVariableFeatures(x, verbose = FALSE)
})

features <- SelectIntegrationFeatures(object.list = rna.All.combined.list)
rna.All.combined.list <- lapply(X = rna.All.combined.list, FUN = function(x) {
  x <- ScaleData(x, features = features, verbose = FALSE)
  x <- RunPCA(x, features = features, verbose = FALSE)
})
#######remove rna.All.combined 
rm(rna.All.combined,anchors)
gc()

#all pairwise anchors
anchors <- FindIntegrationAnchors(object.list = rna.All.combined.list, reduction = "rpca", dims = 1:20)

#This step would waste much time
rna.All.combined.integrated <- IntegrateData(anchorset = anchors, dims = 1:50)
rm(rna.All.combined.list)
gc()
rna.All.combined.integrated <- ScaleData(rna.All.combined.integrated, verbose = FALSE)
rna.All.combined.integrated <- RunPCA(rna.All.combined.integrated, verbose = FALSE)
rna.All.combined.integrated <- RunUMAP(rna.All.combined.integrated, dims = 1:50)
rna.All.combined.integrated <- FindNeighbors(rna.All.combined.integrated, dims = 1:50)
rna.All.combined.integrated <- FindClusters(rna.All.combined.integrated, resolution = 0.138)#15 clusters
###definition clusters
timepoint<-c(rep("1_WT",times=18288),rep("2_2W",times=8479),rep("3_1M",times=15800),rep("4_2.5M",times=48841),rep("5_3.5M",times=25346),rep("6_4.5M",times=40000),rep("7_RC",times=8220))    
rna.All.combined.integrated$timepoint <-timepoint
write.csv(rna.All.combined.integrated@meta.data,"rna.All.combined.integrated_meta.data.csv")  

#####Low_quality_cell identification
rna.All.combined.integrated <- RenameIdents(rna.All.combined.integrated, '0' = 'Low_quality_cell','1' = 'Luminal','2' = 'Neuroendocrine','3' = 'Stromal_1','4' = 'Neutrophil')
rna.All.combined.integrated <- RenameIdents(rna.All.combined.integrated ,'5' = 'Macrophage', '6' = 'Basal','7' = 'Endothelial cell','8' = 'T cell','9' = 'Seminal vesicle','10' = 'Adipocyte','11' = 'Stromal_2','12' = 'B cell','13' = 'Reln_high','14' = 'Neuron')
#DimPlot(rna.All.combined.integrated, label= TRUE, raster = FALSE)

#####################################subset to remove low-quality cells
rna.All.combined.integrated.filter<-subset(rna.All.combined.integrated,integrated_snn_res.0.138!="0")
rna.All.combined.integrated.filter
head(rna.All.combined.integrated.filter@meta.data)
rna.All.combined.integrated.filter <- ScaleData(rna.All.combined.integrated.filter, verbose = FALSE)
rna.All.combined.integrated.filter <- RunPCA(rna.All.combined.integrated.filter, verbose = FALSE)
rna.All.combined.integrated.filter <- RunUMAP(rna.All.combined.integrated.filter, dims = 1:50)
rna.All.combined.integrated.filter <- FindNeighbors(rna.All.combined.integrated.filter, dims = 1:50)
rna.All.combined.integrated.filter <- FindClusters(rna.All.combined.integrated.filter, resolution = 0.08)#}#13 clusters
DimPlot(rna.All.combined.integrated.filter, label= TRUE, raster = FALSE)

#luster annotation 
##Luminal 
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Pigr", "Slc12a2","Fcgbp","Lmo7","Nupr1"), raster = FALSE)
##Neuroendocrine
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Chga", "Nrxn1","Syt1","Fgf14"), raster = FALSE)
##Basal
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Krt15", "Krt14","Krt5","Lgals7","Krt17"), raster = FALSE)
##Seminal vesicle
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Pate4", "Svs5","Svs2","Svs4","Cdo1","Bmpr1b"), raster = FALSE)
##Mesenchymal_1
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Bgn", "Gsn","Mgp","Gpc6","Lama2"), raster = FALSE)
##Mesenchymal_2
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Slit3", "Serping1","Apod","Col1a2"), raster = FALSE)
##Endothelial_1
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Flt1", "Selp","Ptprb","Cyyr1","Ptprm"), raster = FALSE)
##Endothelial_2
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Prex2", "Emcn","Pecam1","Agp1","Slc7a11"), raster = FALSE)
##Neutrophil
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("S100a9", "Cxcl2","Acod1","S100a8","Clec4d"), raster = FALSE)
##Macrophage
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Cd74", "Cd86","Apoe","H2-Ab1","H2-Aa"), raster = FALSE)
##T cell
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Itk", "Skap1","Inpp4b","Prkch","Grap2"), raster = FALSE)
#B cell
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Igkc", "Ighm","Satb1","Bank1","Ebf1","Cd79a","Cd79b","Cd19","Ms4a1"), raster = FALSE)
#Neuron
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Slc35f1", "Scn7a","Plp1","Abca8a","Tenm3"), raster = FALSE)

#####Renaming the clusters
rna.All.combined.integrated.filter <- RenameIdents(rna.All.combined.integrated.filter, '0' = 'Luminal','1' = 'Neutrophil','2' = 'Neuroendocrine','3' = 'Mesenchymal_1','4' = 'Basal','5' = 'Seminal vesicle', '6' = 'Endothelial_1','7' = 'Macrophages','8' = 'T cell','9' = 'B cell','10' = 'Mesenchymal_2','11' = 'Endothelial_2','12' = 'Neuron')
DimPlot(rna.All.combined.integrated.filter, label= TRUE, raster = FALSE)
head(rna.All.combined.integrated.filter@meta.data)
save(rna.All.combined.integrated.filter,file="rna.All.combined.integrated.filter.Rdata")  

#####Dimplot visualisation
DimPlot(rna.All.combined.integrated.filter, label= TRUE, label.size= 3, raster = FALSE, repel= TRUE)
  
#####Feature plot for the genes of interest
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Kitl", "Kit"), raster = FALSE, label = TRUE)
FeaturePlot(object= rna.All.combined.integrated.filter, features=c("Spink1", "Kit"), raster = FALSE, label = TRUE)

#####Save the R object
save(rna.All.combined.integrated.filter, file="rna.All.combined.integrated.filter.Rdata")

